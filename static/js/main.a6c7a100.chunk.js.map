{"version":3,"sources":["App.tsx","utils.ts","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","this","title","length","goods","join","slice","formatGoods","className","Boolean","type","onClick","setState","map","good","goodIsSelected","includes","classNames","index","indexOf","splice","push","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,4CAGlB,WAAU,IAAD,OACCA,EAAkBC,KAAKF,MAAvBC,cACFE,EAAQF,EAAcG,OC/BzB,SAAqBC,GAC1B,OAAQA,EAAMD,QACZ,KAAK,EACH,MAAM,GAAN,OAAUC,EAAMC,KAAK,MAArB,gBAEF,KAAK,EACH,MAAM,GAAN,OAAUD,EAAM,GAAhB,gBAA0BA,EAAM,GAAhC,iBAEF,QACE,MAAM,GAAN,OAAUA,EACPE,MAAM,GAAI,GACVD,KAAK,MAFR,gBAEqBD,EAAMA,EAAMD,OAAS,GAF1C,kBDsBmCI,CAAYP,GAAiB,oBAElE,OACE,sBAAKQ,UAAU,MAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,6BACGN,IAGFO,QAAQT,EAAcG,SACrB,wBACEO,KAAK,SACLF,UAAU,eACVG,QAAS,WACP,EAAKC,SAAS,CAAEZ,cAAe,MAJnC,kBAYJ,oBAAIQ,UAAU,QAAd,SACGX,EAAgBgB,KAAI,SAAAC,GACnB,IAAMC,EAAiBf,EAAcgB,SAASF,GAc9C,OACE,sBAAKN,UAAU,iBAAf,UACE,oBAEEA,UAAWS,IACT,OACA,CAAE,iBAAkBF,IAJxB,SAOGD,GANIA,GASNC,EAEG,wBACEL,KAAK,SACLF,UAAU,SACVG,QAxBY,WACpB,IAAMO,EAAQlB,EAAcmB,QAAQL,GAEpCd,EAAcoB,OAAOF,EAAO,GAC5B,EAAKN,SAAS,CAAEZ,mBAiBV,oBASA,wBACEU,KAAK,SACLF,UAAU,SACVG,QAtCY,WACpBX,EAAcqB,KAAKP,GACnB,EAAKF,SAAS,CAAEZ,mBAiCV,gC,GApEFsB,IAAMC,WAqFTzB,IE1Gf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6c7a100.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { formatGoods } from './utils';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n    const title = selectedGoods.length ? formatGoods(selectedGoods) : 'No goods selected';\n\n    return (\n      <div className=\"App\">\n        <div className=\"title-container\">\n          <h1>\n            {title}\n          </h1>\n\n          {Boolean(selectedGoods.length) && (\n            <button\n              type=\"button\"\n              className=\"title-button\"\n              onClick={() => {\n                this.setState({ selectedGoods: [] });\n              }}\n            >\n              x\n            </button>\n          )}\n        </div>\n\n        <ul className=\"goods\">\n          {goodsFromServer.map(good => {\n            const goodIsSelected = selectedGoods.includes(good);\n\n            const selectHandler = () => {\n              selectedGoods.push(good);\n              this.setState({ selectedGoods });\n            };\n\n            const removeHandler = () => {\n              const index = selectedGoods.indexOf(good);\n\n              selectedGoods.splice(index, 1);\n              this.setState({ selectedGoods });\n            };\n\n            return (\n              <div className=\"good-container\">\n                <li\n                  key={good}\n                  className={classNames(\n                    'good',\n                    { 'good--selected': goodIsSelected },\n                  )}\n                >\n                  {good}\n                </li>\n\n                {goodIsSelected\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={removeHandler}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={selectHandler}\n                    >\n                      Add\n                    </button>\n                  )}\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export function formatGoods(goods: string[]): string {\n  switch (goods.length) {\n    case 1:\n      return `${goods.join(', ')} is selected`;\n\n    case 2:\n      return `${goods[0]} and ${goods[1]} are selected`;\n\n    default:\n      return `${goods\n        .slice(0, -1)\n        .join(', ')} and ${goods[goods.length - 1]} are selected`;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
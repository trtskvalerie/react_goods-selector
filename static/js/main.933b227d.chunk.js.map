{"version":3,"sources":["App.tsx","utils.ts","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","good","this","setState","filter","g","goods","title","length","join","slice","className","Boolean","type","onClick","resetSelection","map","goodIsSelected","includes","classNames","removeHandler","selectHandler","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UASIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,mDAGlB,SAAcC,GACZC,KAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BC,U,2BAI5C,SAAcA,GACZC,KAAKC,UAAS,SAACJ,GAAD,MAAY,CACxBC,cAAeD,EAAMC,cAAcI,QAAO,SAAAC,GAAC,OAAIA,IAAMJ,W,4BAIzD,WACEC,KAAKC,SAAS,CAAEH,cAAe,O,oBAGjC,WAAU,IC7CgBM,ED6CjB,OACCN,EAAkBE,KAAKH,MAAvBC,cACFO,EAAQP,EAAcQ,OC9CN,KADEF,ED+CyBN,GC9CtCQ,OAAN,UACAF,EAAMG,KAAK,MADX,0BAEAH,EACFI,MAAM,GAAI,GACVD,KAAK,MAJH,gBAIgBH,EAAMA,EAAME,OAAS,GAJrC,iBD8C6D,oBAElE,OACE,sBAAKG,UAAU,MAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,6BACGJ,IAGFK,QAAQZ,EAAcQ,SACrB,wBACEK,KAAK,SACLF,UAAU,eACVG,QAAS,WACP,EAAKC,kBAJT,kBAYJ,oBAAIJ,UAAU,QAAd,SACGd,EAAgBmB,KAAI,SAAAf,GACnB,IAAMgB,EAAiBjB,EAAckB,SAASjB,GAE9C,OACE,sBAAKU,UAAU,iBAAf,UACE,oBACEA,UAAWQ,IACT,OACA,CAAE,iBAAkBF,IAHxB,SAMGhB,IAGFgB,EAEG,wBACEJ,KAAK,SACLF,UAAU,SACVG,QAAS,WACP,EAAKM,cAAcnB,IAJvB,oBAWA,wBACEY,KAAK,SACLF,UAAU,SACVG,QAAS,WACP,EAAKO,cAAcpB,IAJvB,mBAvB+BA,e,GAlDjCqB,IAAMC,WA4FTzB,IEjHf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.933b227d.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { formatGoods } from './utils';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {};\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  selectHandler(good: string) {\n    this.setState((state) => ({\n      selectedGoods: [...state.selectedGoods, good],\n    }));\n  }\n\n  removeHandler(good: string) {\n    this.setState((state) => ({\n      selectedGoods: state.selectedGoods.filter(g => g !== good),\n    }));\n  }\n\n  resetSelection() {\n    this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n    const title = selectedGoods.length ? formatGoods(selectedGoods) : 'No goods selected';\n\n    return (\n      <div className=\"App\">\n        <div className=\"title-container\">\n          <h1>\n            {title}\n          </h1>\n\n          {Boolean(selectedGoods.length) && (\n            <button\n              type=\"button\"\n              className=\"title-button\"\n              onClick={() => {\n                this.resetSelection();\n              }}\n            >\n              x\n            </button>\n          )}\n        </div>\n\n        <ul className=\"goods\">\n          {goodsFromServer.map(good => {\n            const goodIsSelected = selectedGoods.includes(good);\n\n            return (\n              <div className=\"good-container\" key={good}>\n                <li\n                  className={classNames(\n                    'good',\n                    { 'good--selected': goodIsSelected },\n                  )}\n                >\n                  {good}\n                </li>\n\n                {goodIsSelected\n                  ? (\n                    <button\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => {\n                        this.removeHandler(good);\n                      }}\n                    >\n                      Remove\n                    </button>\n                  )\n                  : (\n                    <button\n                      type=\"button\"\n                      className=\"button\"\n                      onClick={() => {\n                        this.selectHandler(good);\n                      }}\n                    >\n                      Add\n                    </button>\n                  )}\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export function formatGoods(goods: string[]): string {\n  return goods.length === 1\n    ? `${goods.join(', ')} is selected`\n    : `${goods\n      .slice(0, -1)\n      .join(', ')} and ${goods[goods.length - 1]} are selected`;\n}\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}